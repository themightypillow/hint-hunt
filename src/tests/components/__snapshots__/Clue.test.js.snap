// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render Clue with one found answer, one unfound answer 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Clue
    answers={
      Array [
        WordModel {
          "found": true,
          "word": "one",
          Symbol(mobx did run lazy initializers): true,
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "WordModel@6.keys",
              "observers": Set {},
            },
            "name": "WordModel@6",
            "target": [Circular],
            "values": Map {
              "word" => "one",
              "found" => true,
            },
          },
        },
        WordModel {
          "found": false,
          "word": "two",
          Symbol(mobx did run lazy initializers): true,
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "WordModel@7.keys",
              "observers": Set {},
            },
            "name": "WordModel@7",
            "target": [Circular],
            "values": Map {
              "word" => "two",
              "found" => false,
            },
          },
        },
      ]
    }
    text="First"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "First",
        <div
          className="clue_boxes"
        >
          <div
            className="clue_checkbox clue_checkbox_green"
          >
            <div
              className="clue_checkmark"
            />
          </div>
          <div
            className="clue_checkbox "
          />
        </div>,
      ],
      "className": "clue",
    },
    "ref": null,
    "rendered": Array [
      "First",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="clue_checkbox clue_checkbox_green"
            >
              <div
                className="clue_checkmark"
              />
            </div>,
            <div
              className="clue_checkbox "
            />,
          ],
          "className": "clue_boxes",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "one",
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="clue_checkmark"
              />,
              "className": "clue_checkbox clue_checkbox_green",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "clue_checkmark",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "two",
            "nodeType": "host",
            "props": Object {
              "children": false,
              "className": "clue_checkbox ",
            },
            "ref": null,
            "rendered": false,
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "First",
          <div
            className="clue_boxes"
          >
            <div
              className="clue_checkbox clue_checkbox_green"
            >
              <div
                className="clue_checkmark"
              />
            </div>
            <div
              className="clue_checkbox "
            />
          </div>,
        ],
        "className": "clue",
      },
      "ref": null,
      "rendered": Array [
        "First",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="clue_checkbox clue_checkbox_green"
              >
                <div
                  className="clue_checkmark"
                />
              </div>,
              <div
                className="clue_checkbox "
              />,
            ],
            "className": "clue_boxes",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "one",
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="clue_checkmark"
                />,
                "className": "clue_checkbox clue_checkbox_green",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "clue_checkmark",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "two",
              "nodeType": "host",
              "props": Object {
                "children": false,
                "className": "clue_checkbox ",
              },
              "ref": null,
              "rendered": false,
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`should render Clue with one unfound answer 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Clue
    answers={
      Array [
        WordModel {
          "found": false,
          "word": "one",
          Symbol(mobx did run lazy initializers): true,
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "WordModel@1.keys",
              "observers": Set {},
            },
            "name": "WordModel@1",
            "target": [Circular],
            "values": Map {
              "word" => "one",
              "found" => false,
            },
          },
        },
      ]
    }
    text="First"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "First",
        <div
          className="clue_boxes"
        >
          <div
            className="clue_checkbox "
          />
        </div>,
      ],
      "className": "clue",
    },
    "ref": null,
    "rendered": Array [
      "First",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="clue_checkbox "
            />,
          ],
          "className": "clue_boxes",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "one",
            "nodeType": "host",
            "props": Object {
              "children": false,
              "className": "clue_checkbox ",
            },
            "ref": null,
            "rendered": false,
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "First",
          <div
            className="clue_boxes"
          >
            <div
              className="clue_checkbox "
            />
          </div>,
        ],
        "className": "clue",
      },
      "ref": null,
      "rendered": Array [
        "First",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="clue_checkbox "
              />,
            ],
            "className": "clue_boxes",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "one",
              "nodeType": "host",
              "props": Object {
                "children": false,
                "className": "clue_checkbox ",
              },
              "ref": null,
              "rendered": false,
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`should render Clue with two unfound answers 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Clue
    answers={
      Array [
        WordModel {
          "found": false,
          "word": "one",
          Symbol(mobx did run lazy initializers): true,
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "WordModel@3.keys",
              "observers": Set {},
            },
            "name": "WordModel@3",
            "target": [Circular],
            "values": Map {
              "word" => "one",
              "found" => false,
            },
          },
        },
        WordModel {
          "found": false,
          "word": "two",
          Symbol(mobx did run lazy initializers): true,
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "WordModel@4.keys",
              "observers": Set {},
            },
            "name": "WordModel@4",
            "target": [Circular],
            "values": Map {
              "word" => "two",
              "found" => false,
            },
          },
        },
      ]
    }
    text="First"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "First",
        <div
          className="clue_boxes"
        >
          <div
            className="clue_checkbox "
          />
          <div
            className="clue_checkbox "
          />
        </div>,
      ],
      "className": "clue",
    },
    "ref": null,
    "rendered": Array [
      "First",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="clue_checkbox "
            />,
            <div
              className="clue_checkbox "
            />,
          ],
          "className": "clue_boxes",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "one",
            "nodeType": "host",
            "props": Object {
              "children": false,
              "className": "clue_checkbox ",
            },
            "ref": null,
            "rendered": false,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "two",
            "nodeType": "host",
            "props": Object {
              "children": false,
              "className": "clue_checkbox ",
            },
            "ref": null,
            "rendered": false,
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "First",
          <div
            className="clue_boxes"
          >
            <div
              className="clue_checkbox "
            />
            <div
              className="clue_checkbox "
            />
          </div>,
        ],
        "className": "clue",
      },
      "ref": null,
      "rendered": Array [
        "First",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="clue_checkbox "
              />,
              <div
                className="clue_checkbox "
              />,
            ],
            "className": "clue_boxes",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "one",
              "nodeType": "host",
              "props": Object {
                "children": false,
                "className": "clue_checkbox ",
              },
              "ref": null,
              "rendered": false,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "two",
              "nodeType": "host",
              "props": Object {
                "children": false,
                "className": "clue_checkbox ",
              },
              "ref": null,
              "rendered": false,
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
