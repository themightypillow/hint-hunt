// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render Square with no classes 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Square
    letter={
      LetterModel {
        "classes": Array [],
        "columns": 13,
        "index": 0,
        "letter": "A",
        Symbol(mobx did run lazy initializers): true,
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "LetterModel@6.keys",
            "observers": Set {},
          },
          "name": "LetterModel@6",
          "target": [Circular],
          "values": Map {
            "letter" => "A",
            "classes" => Array [],
            "index" => 0,
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        Array [],
        "A",
      ],
      "className": "square",
      "onMouseDown": [Function],
      "onMouseOver": [Function],
    },
    "ref": null,
    "rendered": Array [
      "A",
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [],
          "A",
        ],
        "className": "square",
        "onMouseDown": [Function],
        "onMouseOver": [Function],
      },
      "ref": null,
      "rendered": Array [
        "A",
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`should render Square with one class 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Square
    letter={
      LetterModel {
        "classes": Array [
          "one",
        ],
        "columns": 13,
        "index": 0,
        "letter": "A",
        Symbol(mobx did run lazy initializers): true,
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "LetterModel@8.keys",
            "observers": Set {},
          },
          "name": "LetterModel@8",
          "target": [Circular],
          "values": Map {
            "letter" => "A",
            "classes" => Array [
              "one",
            ],
            "index" => 0,
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        Array [
          <div
            className="one"
          />,
        ],
        "A",
      ],
      "className": "square",
      "onMouseDown": [Function],
      "onMouseOver": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "A0",
        "nodeType": "host",
        "props": Object {
          "className": "one",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      "A",
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <div
              className="one"
            />,
          ],
          "A",
        ],
        "className": "square",
        "onMouseDown": [Function],
        "onMouseOver": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "A0",
          "nodeType": "host",
          "props": Object {
            "className": "one",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "A",
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`should render Square with two classes 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Square
    letter={
      LetterModel {
        "classes": Array [
          "one",
          "two",
        ],
        "columns": 13,
        "index": 0,
        "letter": "A",
        Symbol(mobx did run lazy initializers): true,
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "LetterModel@10.keys",
            "observers": Set {},
          },
          "name": "LetterModel@10",
          "target": [Circular],
          "values": Map {
            "letter" => "A",
            "classes" => Array [
              "one",
              "two",
            ],
            "index" => 0,
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        Array [
          <div
            className="one"
          />,
          <div
            className="two"
          />,
        ],
        "A",
      ],
      "className": "square",
      "onMouseDown": [Function],
      "onMouseOver": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "A0",
        "nodeType": "host",
        "props": Object {
          "className": "one",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "A1",
        "nodeType": "host",
        "props": Object {
          "className": "two",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      "A",
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <div
              className="one"
            />,
            <div
              className="two"
            />,
          ],
          "A",
        ],
        "className": "square",
        "onMouseDown": [Function],
        "onMouseOver": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "A0",
          "nodeType": "host",
          "props": Object {
            "className": "one",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "A1",
          "nodeType": "host",
          "props": Object {
            "className": "two",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "A",
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
